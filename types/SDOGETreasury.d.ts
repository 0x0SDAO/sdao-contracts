/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface SDOGETreasuryInterface extends ethers.utils.Interface {
  functions: {
    "confirmTx(uint256)": FunctionFragment;
    "executeTransaction(uint256)": FunctionFragment;
    "getOwnerCount()": FunctionFragment;
    "getTransaction(uint256)": FunctionFragment;
    "getTransactionCount()": FunctionFragment;
    "isConfirmed(uint256,address)": FunctionFragment;
    "isOwner(address)": FunctionFragment;
    "numConfirmationsRequired()": FunctionFragment;
    "ownerIndexes(address)": FunctionFragment;
    "owners(uint256)": FunctionFragment;
    "revokeConfirmation(uint256)": FunctionFragment;
    "submitOwnerTx(address)": FunctionFragment;
    "submitTx(address,uint256,address,bytes)": FunctionFragment;
    "transactions(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "confirmTx",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "executeTransaction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTransaction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTransactionCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isConfirmed",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "isOwner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "numConfirmationsRequired",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ownerIndexes",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "owners",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeConfirmation",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "submitOwnerTx",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "submitTx",
    values: [string, BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transactions",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "confirmTx", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTransactionCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isConfirmed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "numConfirmationsRequired",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerIndexes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owners", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "revokeConfirmation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitOwnerTx",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "submitTx", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transactions",
    data: BytesLike
  ): Result;

  events: {
    "ConfirmTx(address,uint256)": EventFragment;
    "Deposit(address,uint256,uint256)": EventFragment;
    "ExecuteTx(address,uint256)": EventFragment;
    "RevokeConfirmation(address,uint256)": EventFragment;
    "SubmitTx(address,uint256,address,uint256,address,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ConfirmTx"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Deposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExecuteTx"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevokeConfirmation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SubmitTx"): EventFragment;
}

export type ConfirmTxEvent = TypedEvent<
  [string, BigNumber] & { owner: string; txIndex: BigNumber }
>;

export type DepositEvent = TypedEvent<
  [string, BigNumber, BigNumber] & {
    sender: string;
    amount: BigNumber;
    balance: BigNumber;
  }
>;

export type ExecuteTxEvent = TypedEvent<
  [string, BigNumber] & { owner: string; txIndex: BigNumber }
>;

export type RevokeConfirmationEvent = TypedEvent<
  [string, BigNumber] & { owner: string; txIndex: BigNumber }
>;

export type SubmitTxEvent = TypedEvent<
  [string, BigNumber, string, BigNumber, string, string] & {
    owner: string;
    txIndex: BigNumber;
    to: string;
    value: BigNumber;
    token: string;
    data: string;
  }
>;

export class SDOGETreasury extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: SDOGETreasuryInterface;

  functions: {
    confirmTx(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    executeTransaction(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getOwnerCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    getTransaction(
      _txIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, string, boolean, BigNumber] & {
        to: string;
        value: BigNumber;
        token: string;
        data: string;
        executed: boolean;
        numConfirmations: BigNumber;
      }
    >;

    getTransactionCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    isConfirmed(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isOwner(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    numConfirmationsRequired(overrides?: CallOverrides): Promise<[BigNumber]>;

    ownerIndexes(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    owners(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    revokeConfirmation(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    submitOwnerTx(
      _target: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    submitTx(
      _to: string,
      _value: BigNumberish,
      _token: string,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transactions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, string, boolean, BigNumber] & {
        to: string;
        value: BigNumber;
        token: string;
        data: string;
        executed: boolean;
        numConfirmations: BigNumber;
      }
    >;
  };

  confirmTx(
    _txIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  executeTransaction(
    _txIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getOwnerCount(overrides?: CallOverrides): Promise<BigNumber>;

  getTransaction(
    _txIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string, string, boolean, BigNumber] & {
      to: string;
      value: BigNumber;
      token: string;
      data: string;
      executed: boolean;
      numConfirmations: BigNumber;
    }
  >;

  getTransactionCount(overrides?: CallOverrides): Promise<BigNumber>;

  isConfirmed(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isOwner(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  numConfirmationsRequired(overrides?: CallOverrides): Promise<BigNumber>;

  ownerIndexes(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  owners(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  revokeConfirmation(
    _txIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  submitOwnerTx(
    _target: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  submitTx(
    _to: string,
    _value: BigNumberish,
    _token: string,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transactions(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string, string, boolean, BigNumber] & {
      to: string;
      value: BigNumber;
      token: string;
      data: string;
      executed: boolean;
      numConfirmations: BigNumber;
    }
  >;

  callStatic: {
    confirmTx(_txIndex: BigNumberish, overrides?: CallOverrides): Promise<void>;

    executeTransaction(
      _txIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getOwnerCount(overrides?: CallOverrides): Promise<BigNumber>;

    getTransaction(
      _txIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, string, boolean, BigNumber] & {
        to: string;
        value: BigNumber;
        token: string;
        data: string;
        executed: boolean;
        numConfirmations: BigNumber;
      }
    >;

    getTransactionCount(overrides?: CallOverrides): Promise<BigNumber>;

    isConfirmed(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isOwner(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    numConfirmationsRequired(overrides?: CallOverrides): Promise<BigNumber>;

    ownerIndexes(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    owners(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    revokeConfirmation(
      _txIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    submitOwnerTx(_target: string, overrides?: CallOverrides): Promise<void>;

    submitTx(
      _to: string,
      _value: BigNumberish,
      _token: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    transactions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, string, boolean, BigNumber] & {
        to: string;
        value: BigNumber;
        token: string;
        data: string;
        executed: boolean;
        numConfirmations: BigNumber;
      }
    >;
  };

  filters: {
    "ConfirmTx(address,uint256)"(
      owner?: string | null,
      txIndex?: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { owner: string; txIndex: BigNumber }
    >;

    ConfirmTx(
      owner?: string | null,
      txIndex?: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { owner: string; txIndex: BigNumber }
    >;

    "Deposit(address,uint256,uint256)"(
      sender?: string | null,
      amount?: null,
      balance?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { sender: string; amount: BigNumber; balance: BigNumber }
    >;

    Deposit(
      sender?: string | null,
      amount?: null,
      balance?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { sender: string; amount: BigNumber; balance: BigNumber }
    >;

    "ExecuteTx(address,uint256)"(
      owner?: string | null,
      txIndex?: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { owner: string; txIndex: BigNumber }
    >;

    ExecuteTx(
      owner?: string | null,
      txIndex?: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { owner: string; txIndex: BigNumber }
    >;

    "RevokeConfirmation(address,uint256)"(
      owner?: string | null,
      txIndex?: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { owner: string; txIndex: BigNumber }
    >;

    RevokeConfirmation(
      owner?: string | null,
      txIndex?: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { owner: string; txIndex: BigNumber }
    >;

    "SubmitTx(address,uint256,address,uint256,address,bytes)"(
      owner?: string | null,
      txIndex?: BigNumberish | null,
      to?: string | null,
      value?: null,
      token?: null,
      data?: null
    ): TypedEventFilter<
      [string, BigNumber, string, BigNumber, string, string],
      {
        owner: string;
        txIndex: BigNumber;
        to: string;
        value: BigNumber;
        token: string;
        data: string;
      }
    >;

    SubmitTx(
      owner?: string | null,
      txIndex?: BigNumberish | null,
      to?: string | null,
      value?: null,
      token?: null,
      data?: null
    ): TypedEventFilter<
      [string, BigNumber, string, BigNumber, string, string],
      {
        owner: string;
        txIndex: BigNumber;
        to: string;
        value: BigNumber;
        token: string;
        data: string;
      }
    >;
  };

  estimateGas: {
    confirmTx(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    executeTransaction(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getOwnerCount(overrides?: CallOverrides): Promise<BigNumber>;

    getTransaction(
      _txIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTransactionCount(overrides?: CallOverrides): Promise<BigNumber>;

    isConfirmed(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isOwner(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    numConfirmationsRequired(overrides?: CallOverrides): Promise<BigNumber>;

    ownerIndexes(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    owners(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    revokeConfirmation(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    submitOwnerTx(
      _target: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    submitTx(
      _to: string,
      _value: BigNumberish,
      _token: string,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transactions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    confirmTx(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    executeTransaction(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getOwnerCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTransaction(
      _txIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTransactionCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isConfirmed(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOwner(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    numConfirmationsRequired(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerIndexes(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owners(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    revokeConfirmation(
      _txIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    submitOwnerTx(
      _target: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    submitTx(
      _to: string,
      _value: BigNumberish,
      _token: string,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transactions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
