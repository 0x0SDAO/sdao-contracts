/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BondDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondDepository__factory>;
    getContractFactory(
      name: "BondDepositoryWBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondDepositoryWBNB__factory>;
    getContractFactory(
      name: "BondingCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondingCalculator__factory>;
    getContractFactory(
      name: "Distributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Distributor__factory>;
    getContractFactory(
      name: "IBEP20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBEP20__factory>;
    getContractFactory(
      name: "IBEP20Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBEP20Mintable__factory>;
    getContractFactory(
      name: "IBEP2612Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBEP2612Permit__factory>;
    getContractFactory(
      name: "IBond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBond__factory>;
    getContractFactory(
      name: "IBondCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondCalculator__factory>;
    getContractFactory(
      name: "IBondingCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondingCalculator__factory>;
    getContractFactory(
      name: "IDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDistributor__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IPancakeBEP20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeBEP20__factory>;
    getContractFactory(
      name: "IPancakeCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeCallee__factory>;
    getContractFactory(
      name: "IPancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeFactory__factory>;
    getContractFactory(
      name: "IPancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakePair__factory>;
    getContractFactory(
      name: "IPancakeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter01__factory>;
    getContractFactory(
      name: "IPancakeRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter02__factory>;
    getContractFactory(
      name: "IPolicy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPolicy__factory>;
    getContractFactory(
      name: "IScholarDogeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScholarDogeToken__factory>;
    getContractFactory(
      name: "IStakedScholarDogeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakedScholarDogeToken__factory>;
    getContractFactory(
      name: "IStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking__factory>;
    getContractFactory(
      name: "IStakingHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingHelper__factory>;
    getContractFactory(
      name: "ITreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasury__factory>;
    getContractFactory(
      name: "IWarmup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWarmup__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IBEP20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBEP20__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "BEP20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEP20__factory>;
    getContractFactory(
      name: "BEP20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEP20Permit__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "PancakeBEP20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeBEP20__factory>;
    getContractFactory(
      name: "PancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeFactory__factory>;
    getContractFactory(
      name: "PancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakePair__factory>;
    getContractFactory(
      name: "PancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeRouter__factory>;
    getContractFactory(
      name: "PancakeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeRouter01__factory>;
    getContractFactory(
      name: "Policy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Policy__factory>;
    getContractFactory(
      name: "VaultOwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultOwned__factory>;
    getContractFactory(
      name: "RedeemHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RedeemHelper__factory>;
    getContractFactory(
      name: "ScholarDogeCirculatingSupply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScholarDogeCirculatingSupply__factory>;
    getContractFactory(
      name: "ScholarDogeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScholarDogeToken__factory>;
    getContractFactory(
      name: "StakedScholarDogeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakedScholarDogeToken__factory>;
    getContractFactory(
      name: "Staking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking__factory>;
    getContractFactory(
      name: "StakingWarmup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingWarmup__factory>;
    getContractFactory(
      name: "BTCB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTCB__factory>;
    getContractFactory(
      name: "BUSD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BUSD__factory>;
    getContractFactory(
      name: "BUSDT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BUSDT__factory>;
    getContractFactory(
      name: "CAKE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CAKE__factory>;
    getContractFactory(
      name: "ChainLinkBNBBUSDPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainLinkBNBBUSDPriceFeed__factory>;
    getContractFactory(
      name: "ETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETH__factory>;
    getContractFactory(
      name: "WBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WBNB__factory>;
    getContractFactory(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Treasury__factory>;

    getContractAt(
      name: "BondDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondDepository>;
    getContractAt(
      name: "BondDepositoryWBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondDepositoryWBNB>;
    getContractAt(
      name: "BondingCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondingCalculator>;
    getContractAt(
      name: "Distributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Distributor>;
    getContractAt(
      name: "IBEP20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBEP20>;
    getContractAt(
      name: "IBEP20Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBEP20Mintable>;
    getContractAt(
      name: "IBEP2612Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBEP2612Permit>;
    getContractAt(
      name: "IBond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBond>;
    getContractAt(
      name: "IBondCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondCalculator>;
    getContractAt(
      name: "IBondingCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondingCalculator>;
    getContractAt(
      name: "IDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDistributor>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IPancakeBEP20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeBEP20>;
    getContractAt(
      name: "IPancakeCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeCallee>;
    getContractAt(
      name: "IPancakeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeFactory>;
    getContractAt(
      name: "IPancakePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakePair>;
    getContractAt(
      name: "IPancakeRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter01>;
    getContractAt(
      name: "IPancakeRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter02>;
    getContractAt(
      name: "IPolicy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPolicy>;
    getContractAt(
      name: "IScholarDogeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScholarDogeToken>;
    getContractAt(
      name: "IStakedScholarDogeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakedScholarDogeToken>;
    getContractAt(
      name: "IStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking>;
    getContractAt(
      name: "IStakingHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingHelper>;
    getContractAt(
      name: "ITreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasury>;
    getContractAt(
      name: "IWarmup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWarmup>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IBEP20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBEP20>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "BEP20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEP20>;
    getContractAt(
      name: "BEP20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEP20Permit>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "PancakeBEP20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeBEP20>;
    getContractAt(
      name: "PancakeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeFactory>;
    getContractAt(
      name: "PancakePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakePair>;
    getContractAt(
      name: "PancakeRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeRouter>;
    getContractAt(
      name: "PancakeRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeRouter01>;
    getContractAt(
      name: "Policy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Policy>;
    getContractAt(
      name: "VaultOwned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultOwned>;
    getContractAt(
      name: "RedeemHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RedeemHelper>;
    getContractAt(
      name: "ScholarDogeCirculatingSupply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScholarDogeCirculatingSupply>;
    getContractAt(
      name: "ScholarDogeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScholarDogeToken>;
    getContractAt(
      name: "StakedScholarDogeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakedScholarDogeToken>;
    getContractAt(
      name: "Staking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking>;
    getContractAt(
      name: "StakingWarmup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingWarmup>;
    getContractAt(
      name: "BTCB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTCB>;
    getContractAt(
      name: "BUSD",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BUSD>;
    getContractAt(
      name: "BUSDT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BUSDT>;
    getContractAt(
      name: "CAKE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CAKE>;
    getContractAt(
      name: "ChainLinkBNBBUSDPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainLinkBNBBUSDPriceFeed>;
    getContractAt(
      name: "ETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETH>;
    getContractAt(
      name: "WBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WBNB>;
    getContractAt(
      name: "Treasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Treasury>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
