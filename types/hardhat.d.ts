/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "BondCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondCalculator__factory>;
    getContractFactory(
      name: "Distributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Distributor__factory>;
    getContractFactory(
      name: "IBondCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondCalculator__factory>;
    getContractFactory(
      name: "IDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDistributor__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Mintable__factory>;
    getContractFactory(
      name: "IERC2612Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2612Permit__factory>;
    getContractFactory(
      name: "IEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEscrow__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IPancakeCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeCallee__factory>;
    getContractFactory(
      name: "IPancakeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeERC20__factory>;
    getContractFactory(
      name: "IPancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeFactory__factory>;
    getContractFactory(
      name: "IPancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakePair__factory>;
    getContractFactory(
      name: "IPancakeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter01__factory>;
    getContractFactory(
      name: "IPancakeRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter02__factory>;
    getContractFactory(
      name: "IPSDOGE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPSDOGE__factory>;
    getContractFactory(
      name: "IReferral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReferral__factory>;
    getContractFactory(
      name: "IReservoir",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReservoir__factory>;
    getContractFactory(
      name: "ISDOGE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISDOGE__factory>;
    getContractFactory(
      name: "ISDOGEBond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISDOGEBond__factory>;
    getContractFactory(
      name: "ISDOGEVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISDOGEVault__factory>;
    getContractFactory(
      name: "ISSDOGE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISSDOGE__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ITWAPOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITWAPOracle__factory>;
    getContractFactory(
      name: "MinterOwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterOwned__factory>;
    getContractFactory(
      name: "TWAPOracleUpdater",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWAPOracleUpdater__factory>;
    getContractFactory(
      name: "PancakeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeERC20__factory>;
    getContractFactory(
      name: "PancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeFactory__factory>;
    getContractFactory(
      name: "PancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakePair__factory>;
    getContractFactory(
      name: "PancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeRouter__factory>;
    getContractFactory(
      name: "PancakeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeRouter01__factory>;
    getContractFactory(
      name: "PrivateSale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrivateSale__factory>;
    getContractFactory(
      name: "PDOGE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PDOGE__factory>;
    getContractFactory(
      name: "PDOGEVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PDOGEVault__factory>;
    getContractFactory(
      name: "Referral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Referral__factory>;
    getContractFactory(
      name: "Reservoir",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reservoir__factory>;
    getContractFactory(
      name: "SDOGE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDOGE__factory>;
    getContractFactory(
      name: "SDOGEBond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDOGEBond__factory>;
    getContractFactory(
      name: "SDOGEBondHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDOGEBondHelper__factory>;
    getContractFactory(
      name: "SDOGEBondPCSHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDOGEBondPCSHelper__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SDOGETreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDOGETreasury__factory>;
    getContractFactory(
      name: "SDOGEVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDOGEVault__factory>;
    getContractFactory(
      name: "SDOGEVaultEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDOGEVaultEscrow__factory>;
    getContractFactory(
      name: "SSDOGE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SSDOGE__factory>;
    getContractFactory(
      name: "BTCB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTCB__factory>;
    getContractFactory(
      name: "BUSD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BUSD__factory>;
    getContractFactory(
      name: "BUSDT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BUSDT__factory>;
    getContractFactory(
      name: "CAKE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CAKE__factory>;
    getContractFactory(
      name: "ETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETH__factory>;
    getContractFactory(
      name: "WBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WBNB__factory>;
    getContractFactory(
      name: "VSDOGE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VSDOGE__factory>;
    getContractFactory(
      name: "VSDOGEOffering",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VSDOGEOffering__factory>;
    getContractFactory(
      name: "VSDOGEVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VSDOGEVault__factory>;

    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "BondCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondCalculator>;
    getContractAt(
      name: "Distributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Distributor>;
    getContractAt(
      name: "IBondCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondCalculator>;
    getContractAt(
      name: "IDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDistributor>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Burnable>;
    getContractAt(
      name: "IERC20Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Mintable>;
    getContractAt(
      name: "IERC2612Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2612Permit>;
    getContractAt(
      name: "IEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEscrow>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IPancakeCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeCallee>;
    getContractAt(
      name: "IPancakeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeERC20>;
    getContractAt(
      name: "IPancakeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeFactory>;
    getContractAt(
      name: "IPancakePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakePair>;
    getContractAt(
      name: "IPancakeRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter01>;
    getContractAt(
      name: "IPancakeRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter02>;
    getContractAt(
      name: "IPSDOGE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPSDOGE>;
    getContractAt(
      name: "IReferral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReferral>;
    getContractAt(
      name: "IReservoir",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReservoir>;
    getContractAt(
      name: "ISDOGE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISDOGE>;
    getContractAt(
      name: "ISDOGEBond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISDOGEBond>;
    getContractAt(
      name: "ISDOGEVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISDOGEVault>;
    getContractAt(
      name: "ISSDOGE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISSDOGE>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ITWAPOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITWAPOracle>;
    getContractAt(
      name: "MinterOwned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterOwned>;
    getContractAt(
      name: "TWAPOracleUpdater",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TWAPOracleUpdater>;
    getContractAt(
      name: "PancakeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeERC20>;
    getContractAt(
      name: "PancakeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeFactory>;
    getContractAt(
      name: "PancakePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakePair>;
    getContractAt(
      name: "PancakeRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeRouter>;
    getContractAt(
      name: "PancakeRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeRouter01>;
    getContractAt(
      name: "PrivateSale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PrivateSale>;
    getContractAt(
      name: "PDOGE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PDOGE>;
    getContractAt(
      name: "PDOGEVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PDOGEVault>;
    getContractAt(
      name: "Referral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Referral>;
    getContractAt(
      name: "Reservoir",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Reservoir>;
    getContractAt(
      name: "SDOGE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDOGE>;
    getContractAt(
      name: "SDOGEBond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDOGEBond>;
    getContractAt(
      name: "SDOGEBondHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDOGEBondHelper>;
    getContractAt(
      name: "SDOGEBondPCSHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDOGEBondPCSHelper>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SDOGETreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDOGETreasury>;
    getContractAt(
      name: "SDOGEVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDOGEVault>;
    getContractAt(
      name: "SDOGEVaultEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDOGEVaultEscrow>;
    getContractAt(
      name: "SSDOGE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SSDOGE>;
    getContractAt(
      name: "BTCB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTCB>;
    getContractAt(
      name: "BUSD",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BUSD>;
    getContractAt(
      name: "BUSDT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BUSDT>;
    getContractAt(
      name: "CAKE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CAKE>;
    getContractAt(
      name: "ETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETH>;
    getContractAt(
      name: "WBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WBNB>;
    getContractAt(
      name: "VSDOGE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VSDOGE>;
    getContractAt(
      name: "VSDOGEOffering",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VSDOGEOffering>;
    getContractAt(
      name: "VSDOGEVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VSDOGEVault>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
