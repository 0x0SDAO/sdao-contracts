/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VSDOGEStaking, VSDOGEStakingInterface } from "../VSDOGEStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sdoge_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vSDOGE_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "redeemPeriod_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reclaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sdoge",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vSDOGE",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610eff380380610eff8339818101604052606081101561003357600080fd5b5080516020820151604092830151600080546001600160a01b031916331780825594519394929391926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0383166100e6576040805162461bcd60e51b815260206004820152601660248201527f416464726573732063616e6e6f74206265207a65726f00000000000000000000604482015290519081900360640190fd5b6001600160601b0319606084901b1660a0526001600160a01b038216610153576040805162461bcd60e51b815260206004820152601660248201527f416464726573732063616e6e6f74206265207a65726f00000000000000000000604482015290519081900360640190fd5b606082901b6001600160601b03191660c05261017a4382610186602090811b6108a117901c565b608052506101e7915050565b6000828201838110156101e0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60805160a05160601c60c05160601c610cb96102466000398061053b528061057b5280610614528061073152508061019652806102a15280610347528061076e52508061022b5280610373528061044d528061059f5250610cb96000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806380e9071b11610076578063ab20ad2e1161005b578063ab20ad2e14610149578063db006a7514610151578063f2fde38b1461016e576100be565b806380e9071b146101395780638da5cb5b14610141576100be565b80633ccfd60b116100a75780633ccfd60b1461011f5780636f45773414610129578063715018a614610131576100be565b806304befb71146100c35780631959a002146100e7575b600080fd5b6100cb610194565b604080516001600160a01b039092168252519081900360200190f35b61010d600480360360208110156100fd57600080fd5b50356001600160a01b03166101b8565b60408051918252519081900360200190f35b6101276101ca565b005b61010d610371565b610127610395565b61012761044b565b6100cb61056a565b6100cb610579565b6101276004803603602081101561016757600080fd5b503561059d565b6101276004803603602081101561018457600080fd5b50356001600160a01b0316610795565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b6000546001600160a01b03163314610229576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000431161029d576040805162461bcd60e51b815260206004820152601f60248201527f526564656d7074696f6e20706572696f6420686173206e6f7420656e64656400604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561030c57600080fd5b505afa158015610320573d6000803e3d6000fd5b505050506040513d602081101561033657600080fd5b5051905061036e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610902565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146103f4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b7f000000000000000000000000000000000000000000000000000000000000000043116104bf576040805162461bcd60e51b815260206004820152601f60248201527f526564656d7074696f6e20706572696f6420686173206e6f7420656e64656400604482015290519081900360640190fd5b33600090815260016020526040902054610520576040805162461bcd60e51b815260206004820152601560248201527f4e6f207653444f474520746f2077697468647261770000000000000000000000604482015290519081900360640190fd5b33600081815260016020526040812080549190559061036e907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610902565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000004310610611576040805162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20706572696f642068617320656e6465640000000000604482015290519081900360640190fd5b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231336040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561067f57600080fd5b505afa158015610693573d6000803e3d6000fd5b505050506040513d60208110156106a957600080fd5b505110156106fe576040805162461bcd60e51b815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015290519081900360640190fd5b3360009081526001602052604090205461071890826108a1565b33600081815260016020526040902091909155610761907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690308461096e565b61036e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610902565b6000546001600160a01b031633146107f4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108395760405162461bcd60e51b8152600401808060200182810382526026815260200180610c5d6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000828201838110156108fb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526109699084906109e3565b505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526109dd9085906109e3565b50505050565b6060610a38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a949092919063ffffffff16565b80519091501561096957808060200190516020811015610a5757600080fd5b50516109695760405162461bcd60e51b815260040180806020018281038252602a815260200180610c83602a913960400191505060405180910390fd5b6060610aa38484600085610aab565b949350505050565b6060610ab685610c56565b610b07576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610b465780518252601f199092019160209182019101610b27565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610ba8576040519150601f19603f3d011682016040523d82523d6000602084013e610bad565b606091505b50915091508115610bc1579150610aa39050565b805115610bd15780518082602001fd5b8360405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c1b578181015183820152602001610c03565b50505050905090810190601f168015610c485780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c6343000705000a";

export class VSDOGEStaking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    sdoge_: string,
    vSDOGE_: string,
    redeemPeriod_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VSDOGEStaking> {
    return super.deploy(
      sdoge_,
      vSDOGE_,
      redeemPeriod_,
      overrides || {}
    ) as Promise<VSDOGEStaking>;
  }
  getDeployTransaction(
    sdoge_: string,
    vSDOGE_: string,
    redeemPeriod_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      sdoge_,
      vSDOGE_,
      redeemPeriod_,
      overrides || {}
    );
  }
  attach(address: string): VSDOGEStaking {
    return super.attach(address) as VSDOGEStaking;
  }
  connect(signer: Signer): VSDOGEStaking__factory {
    return super.connect(signer) as VSDOGEStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VSDOGEStakingInterface {
    return new utils.Interface(_abi) as VSDOGEStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VSDOGEStaking {
    return new Contract(address, _abi, signerOrProvider) as VSDOGEStaking;
  }
}
