/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Distributor, DistributorInterface } from "../Distributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sdao",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPulled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPushed",
    type: "event",
  },
  {
    inputs: [],
    name: "_newOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardRate",
        type: "uint256",
      },
    ],
    name: "addRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "adjustments",
    outputs: [
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "nextRewardAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "nextRewardFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "pushManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "removeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveBounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "setAdjustment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bounty",
        type: "uint256",
      },
    ],
    name: "setBounty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052620f424060e05234801561001857600080fd5b506040516116503803806116508339818101604052606081101561003b57600080fd5b5080516020820151604092830151600080546001600160a01b031916331780825594519394929391926001600160a01b0316917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36001600160a01b0383166100ee576040805162461bcd60e51b815260206004820152601660248201527f5a65726f20616464726573733a20547265617375727900000000000000000000604482015290519081900360640190fd5b6001600160601b0319606084901b1660a0526001600160a01b038216610150576040805162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a205344414f60701b604482015290519081900360640190fd5b6001600160601b0319606083901b166080526001600160a01b0381166101bd576040805162461bcd60e51b815260206004820152601560248201527f5a65726f20616464726573733a205374616b696e670000000000000000000000604482015290519081900360640190fd5b6001600160601b031960609190911b1660c052505060805160601c60a05160601c60c05160601c60e05161142c610224600039806109e85280610e10525080610aad5280610c325280610ccc525080610b445280610c9d525080610a0d525061142c6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063943dfef111610097578063c9fa8b2a11610066578063c9fa8b2a1461028f578063e4fc6b6d146102ac578063e7187e8a146102b4578063f7982243146102bc57610100565b8063943dfef11461021e578063b2bdfa7b14610226578063b74908fe1461024a578063bc3b2b121461025257610100565b80635a96ac0a116100d35780635a96ac0a146101ab5780635d87d363146101b35780635db854b0146101d05780638e69e2551461020157610100565b8063089208d8146101055780632e3405991461010f57806336d33f441461014d57806346f68ee914610185575b600080fd5b61010d6102e8565b005b61012c6004803603602081101561012557600080fd5b5035610391565b604080519283526001600160a01b0390911660208301528051918290030190f35b6101736004803603602081101561016357600080fd5b50356001600160a01b03166103c8565b60408051918252519081900360200190f35b61010d6004803603602081101561019b57600080fd5b50356001600160a01b0316610455565b61010d610554565b61010d600480360360208110156101c957600080fd5b50356105fe565b61010d600480360360808110156101e657600080fd5b508035906020810135151590604081013590606001356106bb565b61010d6004803603602081101561021757600080fd5b5035610849565b610173610997565b61022e61099d565b604080516001600160a01b039092168252519081900360200190f35b61022e6109ac565b61026f6004803603602081101561026857600080fd5b50356109bb565b604080519315158452602084019290925282820152519081900360600190f35b610173600480360360208110156102a557600080fd5b50356109e1565b61010d610aa2565b610173610c25565b61010d600480360360408110156102d257600080fd5b506001600160a01b038135169060200135610d54565b6000546001600160a01b03163314610347576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b600481815481106103a157600080fd5b6000918252602090912060029091020180546001909101549091506001600160a01b031682565b60008060005b60045481101561044e57836001600160a01b0316600482815481106103ef57fe5b60009182526020909120600160029092020101546001600160a01b031614156104465761044361043c6004838154811061042557fe5b9060005260206000209060020201600001546109e1565b8390610f18565b91505b6001016103ce565b5092915050565b6000546001600160a01b031633146104b4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104f95760405162461bcd60e51b81526004018080602001828103825260268152602001806113886026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461059d5760405162461bcd60e51b81526004018080602001828103825260228152602001806113ae6022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b6000546001600160a01b0316331461065d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b63773594008111156106b6576040805162461bcd60e51b815260206004820152600860248201527f546f6f206d756368000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600355565b6000546001600160a01b0316331461071a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60006001600160a01b03166004858154811061073257fe5b60009182526020909120600160029092020101546001600160a01b031614156107a2576040805162461bcd60e51b815260206004820152601860248201527f526563697069656e7420646f6573206e6f742065786973740000000000000000604482015290519081900360640190fd5b8261080457600484815481106107b457fe5b9060005260206000209060020201600001548211156108045760405162461bcd60e51b815260040180806020018281038252602f8152602001806113f1602f913960400191505060405180910390fd5b6040805160608101825293151584526020808501938452848201928352600095865260029081905294209251835460ff19169015151783559051600183015551910155565b6000546001600160a01b031633146108a8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60006001600160a01b0316600482815481106108c057fe5b60009182526020909120600160029092020101546001600160a01b03161415610930576040805162461bcd60e51b815260206004820152601860248201527f526563697069656e7420646f6573206e6f742065786973740000000000000000604482015290519081900360640190fd5b60006004828154811061093f57fe5b906000526020600020906002020160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060006004828154811061098357fe5b600091825260209091206002909102015550565b60035481565b6000546001600160a01b031681565b6001546001600160a01b031681565b600260208190526000918252604090912080546001820154919092015460ff9092169183565b6000610a9c7f0000000000000000000000000000000000000000000000000000000000000000610a96847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6457600080fd5b505afa158015610a78573d6000803e3d6000fd5b505050506040513d6020811015610a8e57600080fd5b505190610f79565b90610fd2565b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b0e576040805162461bcd60e51b815260206004820152600c60248201526b4f6e6c79207374616b696e6760a01b604482015290519081900360640190fd5b60005b600454811015610c2257600060048281548110610b2a57fe5b9060005260206000209060020201600001541115610c1a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a20de9260048381548110610b7e57fe5b906000526020600020906002020160010160009054906101000a90046001600160a01b0316610bb36004858154811061042557fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b50505050610c1a81611014565b600101610b11565b50565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c93576040805162461bcd60e51b815260206004820152600c60248201526b4f6e6c79207374616b696e6760a01b604482015290519081900360640190fd5b60035415610d4d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a20de927f00000000000000000000000000000000000000000000000000000000000000006003546040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610d3457600080fd5b505af1158015610d48573d6000803e3d6000fd5b505050505b5060035490565b6000546001600160a01b03163314610db3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038216610e0e576040805162461bcd60e51b815260206004820152601760248201527f5a65726f20616464726573733a20526563697069656e74000000000000000000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115610e83576040805162461bcd60e51b815260206004820152601e60248201527f526174652063616e6e6f74206578636565642064656e6f6d696e61746f720000604482015290519081900360640190fd5b604080518082019091529081526001600160a01b03918216602082019081526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910180546001600160a01b03191691909216179055565b600082820183811015610f72576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082610f8857506000610a9c565b82820282848281610f9557fe5b0414610f725760405162461bcd60e51b81526004018080602001828103825260218152602001806113d06021913960400191505060405180910390fd5b6000610f7283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611214565b61101c611364565b506000818152600260208181526040928390208351606081018552815460ff16151581526001820154928101839052920154928201929092529015611210578051156111145761108e81602001516004848154811061107757fe5b600091825260209091206002909102015490610f18565b6004838154811061109b57fe5b6000918252602090912060029091020155604081015160048054849081106110bf57fe5b9060005260206000209060020201600001541061110f576000828152600260205260408082206001019190915581015160048054849081106110fd57fe5b60009182526020909120600290910201555b611210565b80602001516004838154811061112657fe5b906000526020600020906002020160000154111561118d5761116a81602001516004848154811061115357fe5b6000918252602090912060029091020154906112cd565b6004838154811061117757fe5b60009182526020909120600290910201556111ae565b60006004838154811061119c57fe5b60009182526020909120600290910201555b8060400151600483815481106111c057fe5b90600052602060002090600202016000015411611210576000828152600260205260408082206001019190915581015160048054849081106111fe57fe5b60009182526020909120600290910201555b5050565b600081836112a05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561126557818101518382015260200161124d565b50505050905090810190601f1680156112925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816112ac57fe5b0490508385816112b857fe5b068185020185146112c557fe5b949350505050565b6000610f7283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506000818484111561135c5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561126557818101518382015260200161124d565b505050900390565b60405180606001604052806000151581526020016000815260200160008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e6e6f742064656372656173652072617465206279206d6f7265207468616e20697420616c7265616479206973a164736f6c6343000705000a";

export class Distributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _treasury: string,
    _sdao: string,
    _staking: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Distributor> {
    return super.deploy(
      _treasury,
      _sdao,
      _staking,
      overrides || {}
    ) as Promise<Distributor>;
  }
  getDeployTransaction(
    _treasury: string,
    _sdao: string,
    _staking: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      _sdao,
      _staking,
      overrides || {}
    );
  }
  attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
