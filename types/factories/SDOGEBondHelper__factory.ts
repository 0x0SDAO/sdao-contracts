/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SDOGEBondHelper,
  SDOGEBondHelperInterface,
} from "../SDOGEBondHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bond_",
        type: "address",
      },
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount0Min_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Min_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "referralCode_",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "recoverLostToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class SDOGEBondHelper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bond_: string,
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SDOGEBondHelper> {
    return super.deploy(
      bond_,
      router_,
      overrides || {}
    ) as Promise<SDOGEBondHelper>;
  }
  getDeployTransaction(
    bond_: string,
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bond_, router_, overrides || {});
  }
  attach(address: string): SDOGEBondHelper {
    return super.attach(address) as SDOGEBondHelper;
  }
  connect(signer: Signer): SDOGEBondHelper__factory {
    return super.connect(signer) as SDOGEBondHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SDOGEBondHelperInterface {
    return new utils.Interface(_abi) as SDOGEBondHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SDOGEBondHelper {
    return new Contract(address, _abi, signerOrProvider) as SDOGEBondHelper;
  }
}
