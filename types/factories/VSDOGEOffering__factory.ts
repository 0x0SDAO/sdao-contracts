/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VSDOGEOffering,
  VSDOGEOfferingInterface,
} from "../VSDOGEOffering";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vSDOGE_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "LogStart",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "buyers",
        type: "address[]",
      },
    ],
    name: "LogWhiteListBuyers",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInAmount_",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
    ],
    name: "claimRemaining",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCapPerBuyer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInAmount_",
        type: "uint256",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offeringStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offeringPeriod_",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIn",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWhiteListed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vSDOGE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "buyers_",
        type: "address[]",
      },
    ],
    name: "whiteListBuyers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161153d38038061153d8339818101604052606081101561003357600080fd5b5080516020820151604092830151600080546001600160a01b031916331780825594519394929391926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0383166100d9576040805162461bcd60e51b815260206004820152601060248201526f1d94d113d1d1481d5b9919599a5b995960821b604482015290519081900360640190fd5b6001600160601b0319606084901b166080526001600160a01b03821661013a576040805162461bcd60e51b8152602060048201526011602482015270151bdad95b925b881d5b9919599a5b9959607a1b604482015290519081900360640190fd5b6001600160601b0319606083901b1660a0526001600160a01b03811661019c576040805162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b9919599a5b995960721b604482015290519081900360640190fd5b6001600160601b031960609190911b1660c052505060805160601c60a05160601c60c05160601c6113396102046000398061066c5280610703525080610649528061073052508061069e528061092c52806109cd5280610a145280610c3552506113396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a6116100975780638fb4b573116100665780638fb4b5731461028c578063a07b206f146102af578063ab20ad2e146102b7578063f2fde38b146102bf57610100565b8063715018a61461024e5780638720bcc01461025657806389ebfa7e1461027c5780638da5cb5b1461028457610100565b806357764094116100d357806357764094146101e957806361d027b3146102065780636a4bd49d1461022a5780636daf390b1461024657610100565b8063083c6323146101055780631eef76591461011f5780632c4e722e146101c45780632d296bf1146101cc575b600080fd5b61010d6102e5565b60408051918252519081900360200190f35b6101c26004803603602081101561013557600080fd5b81019060208101813564010000000081111561015057600080fd5b82018360208201111561016257600080fd5b8035906020019184602083028401116401000000008311171561018457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506102eb945050505050565b005b61010d610476565b6101c2600480360360208110156101e257600080fd5b503561047c565b61010d600480360360208110156101ff57600080fd5b50356106c9565b61020e610701565b604080516001600160a01b039092168252519081900360200190f35b610232610725565b604080519115158252519081900360200190f35b61020e61072e565b6101c2610752565b6101c26004803603602081101561026c57600080fd5b50356001600160a01b0316610808565b61010d6109f7565b61020e610ab7565b6101c2600480360360408110156102a257600080fd5b5080359060200135610ac6565b61010d610c2d565b61020e610c33565b6101c2600480360360208110156102d557600080fd5b50356001600160a01b0316610c57565b60025481565b6000546001600160a01b0316331461034a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60035460ff1615610394576040805162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd185c9d1959608a1b604482015290519081900360640190fd5b80516004546103a291610d63565b60045560005b81518110156103fd576001600660008484815181106103c357fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016103a8565b507f0e0d0ae69b7d591e2a4ca8ef890334175ed05f25841aa733cb8343431fa388bd816040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610460578181015183820152602001610448565b505050509050019250505060405180910390a150565b60015481565b60035460ff16801561049057506002544311155b6104e1576040805162461bcd60e51b815260206004820152601060248201527f4f66666572696e67206973206f76657200000000000000000000000000000000604482015290519081900360640190fd5b3360009081526006602052604090205460ff16610545576040805162461bcd60e51b815260206004820152600f60248201527f4e6f742077686974656c69737465640000000000000000000000000000000000604482015290519081900360640190fd5b3360009081526005602052604090205460ff16156105aa576040805162461bcd60e51b815260206004820152601460248201527f416c726561647920706172746963697061746564000000000000000000000000604482015290519081900360640190fd5b336000908152600560205260408120805460ff191660011790556105cd826106c9565b90506105d76109f7565b81111561062b576040805162461bcd60e51b815260206004820152601360248201527f4f76657220696e646976696475616c2063617000000000000000000000000000604482015290519081900360640190fd5b600454610639906001610dc6565b6004556106916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f000000000000000000000000000000000000000000000000000000000000000085610e08565b6106c56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610e7d565b5050565b6000600154600014156106de575060006106fc565b6001546106f9906106f3633b9aca0085610ee9565b90610f42565b90505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146107b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b03163314610867576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60035460ff16158061087a575060025443115b6108cb576040805162461bcd60e51b815260206004820152601660248201527f4f66666572696e67207374696c6c2072756e6e696e6700000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610926576040805162461bcd60e51b815260206004820152601360248201527f726563697069656e7420756e646566696e656400000000000000000000000000604482015290519081900360640190fd5b6109f4817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561099757600080fd5b505afa1580156109ab573d6000803e3d6000fd5b505050506040513d60208110156109c157600080fd5b50516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610e7d565b50565b600060045460001415610a0c57506000610ab4565b610ab16004547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a7f57600080fd5b505afa158015610a93573d6000803e3d6000fd5b505050506040513d6020811015610aa957600080fd5b505190610f42565b90505b90565b6000546001600160a01b031690565b6000546001600160a01b03163314610b25576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60035460ff1615610b6f576040805162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd185c9d1959608a1b604482015290519081900360640190fd5b60008211610bc4576040805162461bcd60e51b815260206004820152601360248201527f526174652063616e6e6f74206265207a65726f00000000000000000000000000604482015290519081900360640190fd5b6001829055610bd34382610d63565b60028190556003805460ff1916600190811790915554604080519182524360208301528181019290925290517fce4849b249c76b6e040dc451cdc8692c890fd1f6feb45e86e63424c2e861795f9181900360600190a15050565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03163314610cb6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610cfb5760405162461bcd60e51b81526004018080602001828103825260268152602001806112bc6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600082820183811015610dbd576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000610dbd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f84565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610e7790859061101b565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610ee490849061101b565b505050565b600082610ef857506000610dc0565b82820282848281610f0557fe5b0414610dbd5760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b6000610dbd83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506110cc565b600081848411156110135760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fd8578181015183820152602001610fc0565b50505050905090810190601f1680156110055780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6060611070826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111319092919063ffffffff16565b805190915015610ee45780806020019051602081101561108f57600080fd5b5051610ee45760405162461bcd60e51b815260040180806020018281038252602a815260200180611303602a913960400191505060405180910390fd5b6000818361111b5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610fd8578181015183820152602001610fc0565b50600083858161112757fe5b0495945050505050565b60606111408484600085611148565b949350505050565b6060611153856112b5565b6111a4576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106111e35780518252601f1990920191602091820191016111c4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611245576040519150601f19603f3d011682016040523d82523d6000602084013e61124a565b606091505b5091509150811561125e5791506111409050565b80511561126e5780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315610fd8578181015183820152602001610fc0565b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c6343000705000a";

export class VSDOGEOffering__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    vSDOGE_: string,
    tokenIn_: string,
    treasury_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VSDOGEOffering> {
    return super.deploy(
      vSDOGE_,
      tokenIn_,
      treasury_,
      overrides || {}
    ) as Promise<VSDOGEOffering>;
  }
  getDeployTransaction(
    vSDOGE_: string,
    tokenIn_: string,
    treasury_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vSDOGE_,
      tokenIn_,
      treasury_,
      overrides || {}
    );
  }
  attach(address: string): VSDOGEOffering {
    return super.attach(address) as VSDOGEOffering;
  }
  connect(signer: Signer): VSDOGEOffering__factory {
    return super.connect(signer) as VSDOGEOffering__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VSDOGEOfferingInterface {
    return new utils.Interface(_abi) as VSDOGEOfferingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VSDOGEOffering {
    return new Contract(address, _abi, signerOrProvider) as VSDOGEOffering;
  }
}
