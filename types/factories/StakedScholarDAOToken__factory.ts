/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakedScholarDAOToken,
  StakedScholarDAOTokenInterface,
} from "../StakedScholarDAOToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rebase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "LogRebase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    name: "LogStakingContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "LogSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPulled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPushed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_newOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gons",
        type: "uint256",
      },
    ],
    name: "balanceForGons",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circulatingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "gonsForBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingContract_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "pushManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profit_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "epoch_",
        type: "uint256",
      },
    ],
    name: "rebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rebases",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedBefore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountRebased",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumberOccured",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_INDEX",
        type: "uint256",
      },
    ],
    name: "setIndex",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601781527f5374616b6564205363686f6c617244414f20746f6b656e00000000000000000060208083019182528351808501909452600684526524535344414f60d01b9084015281519192916009916200007991600391906200038f565b5081516200008f9060049060208501906200038f565b506005805460ff191660ff92909216919091179055504690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000d3620001e4565b805160209182012060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606084015260808301939093523060a0808401919091528351808403909101815260c0909201928390528151910120600755600880546001600160a01b0319163317908190556001600160a01b0316906000907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a3600b80546001600160a01b031916331790556611c37937e080006002819055620001db908060001906600019036200027e60201b620013e21790919060201c565b600e556200043b565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015620002745780601f10620002485761010080835404028352916020019162000274565b820191906000526020600020905b8154815290600101906020018083116200025657829003601f168201915b5050505050905090565b6000620002c883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620002cf60201b60201c565b9392505050565b600081836200035f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200032357818101518382015260200162000309565b50505050905090810190601f168015620003515780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816200036c57fe5b0490508385816200037957fe5b068185020185146200038757fe5b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003c7576000855562000412565b82601f10620003e257805160ff191683800117855562000412565b8280016001018555821562000412579182015b8281111562000412578251825591602001919060010190620003f5565b506200042092915062000424565b5090565b5b8082111562000420576000815560010162000425565b611880806200044b6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80635a96ac0a1161010f578063a457c2d7116100a2578063c4d66de811610071578063c4d66de814610550578063d505accf14610576578063dd62ed3e146105c7578063ee99205c146105f5576101e5565b8063a457c2d7146104e8578063a9059cbb14610514578063b2bdfa7b14610540578063b74908fe14610548576101e5565b80637ecebe00116100de5780637ecebe001461048e5780639358928b146104b457806395d89b41146104bc5780639ce110d7146104c4576101e5565b80635a96ac0a146103ee57806370a08231146103f657806373c69eb71461041c5780637965d56d14610471576101e5565b80632986c0e5116101875780633644e515116101565780633644e51514610377578063395093511461037f57806340a5737f146103ab57806346f68ee9146103c8576101e5565b80632986c0e5146103415780632df75cb11461034957806330adf81f14610351578063313ce56714610359576101e5565b8063095ea7b3116101c3578063095ea7b3146102a657806318160ddd146102e65780631bd39674146102ee57806323b872dd1461030b576101e5565b8063058ecdb4146101ea57806306fdde031461021f578063089208d81461029c575b600080fd5b61020d6004803603604081101561020057600080fd5b50803590602001356105fd565b60408051918252519081900360200190f35b610227610759565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610261578181015183820152602001610249565b50505050905090810190601f16801561028e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a46107ef565b005b6102d2600480360360408110156102bc57600080fd5b506001600160a01b038135169060200135610898565b604080519115158252519081900360200190f35b61020d6108fe565b61020d6004803603602081101561030457600080fd5b5035610904565b6102d26004803603606081101561032157600080fd5b506001600160a01b0381358116916020810135909116906040013561091b565b61020d610a67565b61020d610a79565b61020d610a7f565b610361610aa3565b6040805160ff9092168252519081900360200190f35b61020d610aac565b6102d26004803603604081101561039557600080fd5b506001600160a01b038135169060200135610ab2565b6102d2600480360360208110156103c157600080fd5b5035610b45565b6102a4600480360360208110156103de57600080fd5b50356001600160a01b0316610bc8565b6102a4610cc8565b61020d6004803603602081101561040c57600080fd5b50356001600160a01b0316610d74565b6104396004803603602081101561043257600080fd5b5035610d9c565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b61020d6004803603602081101561048757600080fd5b5035610dee565b61020d600480360360208110156104a457600080fd5b50356001600160a01b0316610e05565b61020d610e26565b610227610e4b565b6104cc610eac565b604080516001600160a01b039092168252519081900360200190f35b6102d2600480360360408110156104fe57600080fd5b506001600160a01b038135169060200135610ebb565b6102d26004803603604081101561052a57600080fd5b506001600160a01b038135169060200135610fa4565b6104cc611064565b6104cc611073565b6102d26004803603602081101561056657600080fd5b50356001600160a01b0316611082565b6102a4600480360360e081101561058c57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561117b565b61020d600480360360408110156105dd57600080fd5b506001600160a01b03813581169160200135166113a8565b6104cc6113d3565b600a546000906001600160a01b0316331461061757600080fd5b600080610622610e26565b9050846106b857600254604080514281526020810192909252805186927f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da492908290030190a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610694610a67565b6040805192835260208301919091528051918290030190a260025492505050610753565b80156106e4576106dd816106d76002548861142b90919063ffffffff16565b906113e2565b91506106e8565b8491505b6002546106f59083611484565b60028190556fffffffffffffffffffffffffffffffff1015610726576fffffffffffffffffffffffffffffffff6002555b60025461073c90660e3d2cfe61ffff19906113e2565b600e5561074a8186866114de565b50600254925050505b92915050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107e55780601f106107ba576101008083540402835291602001916107e5565b820191906000526020600020905b8154815290600101906020018083116107c857829003601f168201915b5050505050905090565b6008546001600160a01b0316331461084e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6008546040516000916001600160a01b0316907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600880546001600160a01b0319169055565b3360008181526010602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025490565b6000610753600e548361142b90919063ffffffff16565b6001600160a01b03831660009081526010602090815260408083203384529091528120546109499083611625565b6001600160a01b0385166000818152601060209081526040808320338085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a360006109b083610904565b6001600160a01b0386166000908152600f60205260409020549091506109d69082611625565b6001600160a01b038087166000908152600f60205260408082209390935590861681522054610a059082611484565b6001600160a01b038086166000818152600f602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3506001949350505050565b6000610a74600d54610dee565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60055460ff1690565b60075481565b3360009081526010602090815260408083206001600160a01b0386168452909152812054610ae09083611484565b3360008181526010602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6008546000906001600160a01b03163314610ba7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600d5415610bb457600080fd5b610bbd82610904565b600d55506001919050565b6008546001600160a01b03163314610c27576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610c6c5760405162461bcd60e51b81526004018080602001828103825260268152602001806117ea6026913960400191505060405180910390fd5b6008546040516001600160a01b038084169216907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba90600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b03163314610d115760405162461bcd60e51b81526004018080602001828103825260228152602001806118106022913960400191505060405180910390fd5b6009546008546040516001600160a01b0392831692909116907faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d90600090a3600954600880546001600160a01b0319166001600160a01b03909216919091179055565b600e546001600160a01b0382166000908152600f6020526040812054909161075391906113e2565b600c8181548110610dac57600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000610753600e54836113e290919063ffffffff16565b6001600160a01b038116600090815260066020526040812061075390611667565b600a54600090610a7490610e42906001600160a01b0316610d74565b60025490611625565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107e55780601f106107ba576101008083540402835291602001916107e5565b600b546001600160a01b031681565b3360009081526010602090815260408083206001600160a01b0386168452909152812054808310610f0f573360009081526010602090815260408083206001600160a01b0388168452909152812055610f3e565b610f198184611625565b3360009081526010602090815260408083206001600160a01b03891684529091529020555b3360008181526010602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600080610fbc600e548461142b90919063ffffffff16565b336000908152600f6020526040902054909150610fd99082611625565b336000908152600f6020526040808220929092556001600160a01b038616815220546110059082611484565b6001600160a01b0385166000818152600f60209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b6008546001600160a01b031681565b6009546001600160a01b031681565b600b546000906001600160a01b0316331461109c57600080fd5b6001600160a01b0382166110af57600080fd5b600a80546001600160a01b0319166001600160a01b038481169190911780835581166000908152600f60209081526040808320660e3d2cfe61ffff19905593546002548551908152945193169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3604080516001600160a01b038416815290517f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a19181900360200190a15050600b80546001600160a01b0319169055600190565b834211156111d0576040805162461bcd60e51b815260206004820152601860248201527f5065726d69743a206578706972656420646561646c696e650000000000000000604482015290519081900360640190fd5b6001600160a01b03871660009081526006602052604081207f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99089908990899061121990611667565b604080516020808201979097526001600160a01b0395861681830152939094166060840152608083019190915260a082015260c08082018990528251808303909101815260e08201835280519084012060075461190160f01b610100840152610102830152610122808301829052835180840390910181526101428301808552815191860191909120600091829052610162840180865281905260ff8a166101828501526101a284018990526101c28401889052935191955092936001926101e280820193601f1981019281900390910190855afa1580156112ff573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906113355750896001600160a01b0316816001600160a01b0316145b6113705760405162461bcd60e51b81526004018080602001828103825260218152602001806118326021913960400191505060405180910390fd5b6001600160a01b038a1660009081526006602052604090206113919061166b565b61139c8a8a8a611674565b50505050505050505050565b6001600160a01b03918216600090815260106020908152604080832093909416825291909152205490565b600a546001600160a01b031681565b600061142483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116d6565b9392505050565b60008261143a57506000610753565b8282028284828161144757fe5b04146114245760405162461bcd60e51b81526004018080602001828103825260218152602001806118536021913960400191505060405180910390fd5b600082820183811015611424576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000806114f7856106d786670de0b6b3a764000061142b565b9050600c6040518060e00160405280858152602001838152602001878152602001611520610e26565b8152602001868152602001611533610a67565b81524360209182015282546001818101855560009485529382902083516007909202019081558282015193810193909355604080830151600280860191909155606084015160038601556080840151600486015560a0840151600586015560c0909301516006909401939093559054825142815291820152815185927f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4928290030190a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb282611602610a67565b6040805192835260208301919091528051918290030190a2506001949350505050565b600061142483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061178f565b5490565b80546001019055565b6001600160a01b03808416600081815260106020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600081836117625760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561172757818101518382015260200161170f565b50505050905090810190601f1680156117545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161176e57fe5b04905083858161177a57fe5b0681850201851461178757fe5b949350505050565b600081848411156117e15760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561172757818101518382015260200161170f565b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a";

export class StakedScholarDAOToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakedScholarDAOToken> {
    return super.deploy(overrides || {}) as Promise<StakedScholarDAOToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakedScholarDAOToken {
    return super.attach(address) as StakedScholarDAOToken;
  }
  connect(signer: Signer): StakedScholarDAOToken__factory {
    return super.connect(signer) as StakedScholarDAOToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakedScholarDAOTokenInterface {
    return new utils.Interface(_abi) as StakedScholarDAOTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakedScholarDAOToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StakedScholarDAOToken;
  }
}
