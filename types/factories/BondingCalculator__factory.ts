/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BondingCalculator,
  BondingCalculatorInterface,
} from "../BondingCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_SDAO",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "SDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getKValue",
    outputs: [
      {
        internalType: "uint256",
        name: "k_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610db9380380610db98339818101604052602081101561003357600080fd5b50516001600160a01b03811661004857600080fd5b606081901b6001600160601b0319166080526001600160a01b0316610d35610084600039806101e8528061028652806107265250610d356000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063490084ef11610050578063490084ef146100d057806368637549146100f657806375f24be51461011c57610067565b806332da80a31461006c5780634249719f146100a4575b600080fd5b6100926004803603602081101561008257600080fd5b50356001600160a01b0316610140565b60408051918252519081900360200190f35b610092600480360360408110156100ba57600080fd5b506001600160a01b03813516906020013561032a565b610092600480360360208110156100e657600080fd5b50356001600160a01b03166103d2565b6100926004803603602081101561010c57600080fd5b50356001600160a01b0316610706565b610124610724565b604080516001600160a01b039092168252519081900360200190f35b6000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561017e57600080fd5b505afa158015610192573d6000803e3d6000fd5b505050506040513d60608110156101a857600080fd5b50805160209182015160408051630dfe168160e01b815290516dffffffffffffffffffffffffffff93841696509290911693506000926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169390891692630dfe1681926004808301939192829003018186803b15801561023057600080fd5b505afa158015610244573d6000803e3d6000fd5b505050506040513d602081101561025a57600080fd5b50516001600160a01b03161415610272575080610275565b50815b61031f61028186610706565b6103197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102dd57600080fd5b505afa1580156102f1573d6000803e3d6000fd5b505050506040513d602081101561030757600080fd5b5051849060ff16600a0a600202610748565b906107a8565b93505050505b919050565b60008061033684610706565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561037357600080fd5b505afa158015610387573d6000803e3d6000fd5b505050506040513d602081101561039d57600080fd5b505190506103c9670de0b6b3a76400006103196103c26103bd88866107ea565b61096c565b8590610748565b95945050505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561040e57600080fd5b505afa158015610422573d6000803e3d6000fd5b505050506040513d602081101561043857600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561047c57600080fd5b505afa158015610490573d6000803e3d6000fd5b505050506040513d60208110156104a657600080fd5b50516040805163d21220a760e01b8152905160ff90921692506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b1580156104f257600080fd5b505afa158015610506573d6000803e3d6000fd5b505050506040513d602081101561051c57600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561056057600080fd5b505afa158015610574573d6000803e3d6000fd5b505050506040513d602081101561058a57600080fd5b505160408051630240bc6b60e21b8152905160ff909216925060009182916001600160a01b03881691630902f1ac91600480820192606092909190829003018186803b1580156105d957600080fd5b505afa1580156105ed573d6000803e3d6000fd5b505050506040513d606081101561060357600080fd5b5080516020918201516040805163313ce56760e01b815290516dffffffffffffffffffffffffffff93841696509290911693506000926001600160a01b038a169263313ce567926004808201939291829003018186803b15801561066657600080fd5b505afa15801561067a573d6000803e3d6000fd5b505050506040513d602081101561069057600080fd5b505160ff169050806106a28686610984565b10156106d7576106d26106bf6106b88787610984565b83906109de565b600a0a6106cc8585610748565b90610748565b6106fb565b6106fb6106ee826106e88888610984565b906109de565b600a0a6103198585610748565b979650505050505050565b600061071e60026106cc610719856103d2565b610a20565b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000826107575750600061071e565b8282028284828161076457fe5b04146107a15760405162461bcd60e51b8152600401808060200182810382526021815260200180610d086021913960400191505060405180910390fd5b9392505050565b60006107a183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610a8a565b6107f2610ccf565b600082116108315760405162461bcd60e51b8152600401808060200182810382526026815260200180610ce26026913960400191505060405180910390fd5b8261084b575060408051602081019091526000815261071e565b71ffffffffffffffffffffffffffffffffffff83116108f257600082607085901b8161087357fe5b0490506001600160e01b038111156108d2576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b6040518060200160405280826001600160e01b031681525091505061071e565b600061090e846e01000000000000000000000000000085610b43565b90506001600160e01b038111156108d2576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b516612725dd1d243ab6001600160e01b039091160490565b6000828201838110156107a1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006107a183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bd8565b60006003821115610a7c5750806000610a44610a3d8360026107a8565b6001610984565b90505b81811015610a7657809150610a6f610a68610a6285846107a8565b83610984565b60026107a8565b9050610a47565b50610325565b811561032557506001919050565b60008183610b165760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610adb578181015183820152602001610ac3565b50505050905090810190601f168015610b085780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610b2257fe5b049050838581610b2e57fe5b06818502018514610b3b57fe5b949350505050565b6000806000610b528686610c32565b9150915060008480610b6057fe5b868809905082811115610b74576001820391505b8083039250848210610bcd576040805162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77000000000000604482015290519081900360640190fd5b6106fb838387610c5f565b60008184841115610c2a5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610adb578181015183820152602001610ac3565b505050900390565b6000808060001984860990508385029250828103915082811015610c57576001820391505b509250929050565b60008181038216808381610c6f57fe5b049250808581610c7b57fe5b049450808160000381610c8a57fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6040805160208101909152600081529056fe4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a";

export class BondingCalculator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _SDAO: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BondingCalculator> {
    return super.deploy(_SDAO, overrides || {}) as Promise<BondingCalculator>;
  }
  getDeployTransaction(
    _SDAO: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_SDAO, overrides || {});
  }
  attach(address: string): BondingCalculator {
    return super.attach(address) as BondingCalculator;
  }
  connect(signer: Signer): BondingCalculator__factory {
    return super.connect(signer) as BondingCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BondingCalculatorInterface {
    return new utils.Interface(_abi) as BondingCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BondingCalculator {
    return new Contract(address, _abi, signerOrProvider) as BondingCalculator;
  }
}
